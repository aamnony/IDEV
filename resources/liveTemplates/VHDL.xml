<templateSet group="VHDL">
    <template name="iff" value="if $COND$ then&#10;    $END$&#10;end if;" description="Inserts ''if-and-only-if'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="testbench" value="library ieee;&#10;    use ieee.std_logic_1164.all;&#10;&#10;entity $ENTITY_NAME$_tb is&#10;end $ENTITY_NAME$_tb;&#10;&#10;architecture $ENTITY_NAME$_tb_arch of $ENTITY_NAME$_tb is&#10;    component $ENTITY_NAME$ is&#10;    port(&#10;        $ALL_INPUTS$ : in $IN_TYPE$;&#10;        $ALL_OUTPUTS$ : out $OUT_TYPE$&#10;    );&#10;    end component;&#10;    &#10;    signal $ALL_INPUTS_INTERNAL_SIGNALS$ : $IN_TYPE$;&#10;    signal $ALL_OUTPUTS_INTERNAL_SIGNALS$ : $OUT_TYPE$;&#10;    constant $CLK_PERIOD$ :time := 2 ns;&#10;    &#10;begin&#10;    comp: $ENTITY_NAME$ port map ($PORT_MAPPING$);    &#10;    &#10;    test0: process&#10;    begin&#10;        $CLOCK_NAME$_tb &lt;= '0';&#10;        wait for $CLK_PERIOD$/4;&#10;        $CLOCK_NAME$_tb &lt;= '1';&#10;        wait for $CLK_PERIOD$/4;&#10;        $CLOCK_NAME$_tb &lt;= '0';&#10;        wait for $CLK_PERIOD$/4;&#10;        $CLOCK_NAME$_tb &lt;= '1';&#10;        wait for $CLK_PERIOD$/4;&#10;     end process;&#10;    &#10;end architecture $ENTITY_NAME$_tb_arch;" description="" toReformat="false" toShortenFQNames="true">
        <variable name="ENTITY_NAME" expression="variableOfType(&quot;entity&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="ALL_INPUTS" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="IN_TYPE" expression="" defaultValue="&quot;std_logic&quot;" alwaysStopAt="true" />
        <variable name="ALL_OUTPUTS" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="OUT_TYPE" expression="" defaultValue="&quot;std_logic&quot;" alwaysStopAt="true" />
        <variable name="ALL_INPUTS_INTERNAL_SIGNALS" expression="regularExpression(ALL_INPUTS,&quot;(\\w+)&quot;,&quot;$1_tb&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="ALL_OUTPUTS_INTERNAL_SIGNALS" expression="regularExpression(ALL_OUTPUTS,&quot;(\\w+)&quot;,&quot;$1_tb&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="CLK_PERIOD" expression="" defaultValue="&quot;clock_period&quot;" alwaysStopAt="true" />
        <variable name="PORT_MAPPING" expression="concat(regularExpression(ALL_INPUTS,&quot;(\\w+)&quot;,&quot;$1 =&gt; $1_tb&quot;),&quot;, &quot;,regularExpression(ALL_OUTPUTS,&quot;(\\w+)&quot;,&quot;$1 =&gt; $1_tb&quot;))" defaultValue="" alwaysStopAt="true" />
        <variable name="CLOCK_NAME" expression="" defaultValue="&quot;clock&quot;" alwaysStopAt="true" />
        <context>
            <option name="GROOVY" value="true" />
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="if" value="if $COND$ then&#10;    $END$" description="Inserts ''if' branch" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="else" value="else &#10;    $END$" description="Inserts ''else'' branch" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="elsif" value="elsif $COND$ then&#10;    $END$" description="Inserts ''elsif'' branch" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ife" value="if $COND$ then&#10;    $END$&#10;else&#10;    &#10;end if;" description="Inserts ''if-else'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ifre" value="if rising_edge($CLOCK$) then&#10;    $END$" description="Inserts ''if rising_edge(clock)'' branch" toReformat="false" toShortenFQNames="true">
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="process" value="$PROC_NAME$_proc : process $SENS_LIST$ is&#10;begin&#10;    $END$&#10;end process $PROC_NAME$_proc;" description="Inserts ''process'' statement" toReformat="false"
        toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="SENS_LIST" expression="&quot;(clock, reset)&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ff"
        value="$PROC_NAME$_proc : process ($CLOCK$, $RESET$) is&#10;begin&#10;    if $RESET$ = $RESET_POLARITY$ then&#10;        $END$&#10;    elsif rising_edge($CLOCK$) then&#10;        &#10;    end if;&#10;end process $PROC_NAME$_proc;"
        description="Inserts ''synchronous process with reset'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RESET" expression="&quot;reset&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RESET_POLARITY" expression="enum(&quot;reset_polarity_g&quot;, &quot;'1'&quot;, &quot;'0'&quot;, &quot;true&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="nrff" value="$PROC_NAME$_proc : process ($CLOCK$) is&#10;begin&#10;    if rising_edge($CLOCK$) then&#10;        $END$&#10;    end if;&#10;end process $PROC_NAME$_proc;"
        description="Inserts ''synchronous process without reset'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="function"
        value="function $FUNC_NAME$($PARAMS$) return $RETURN_TYPE$ is&#10;    variable return_v : $RETURN_TYPE$;&#10;begin&#10;    $END$&#10;    return return_v;&#10;end function $FUNC_NAME$;"
        description="Inserts ''function'' implementation" toReformat="false" toShortenFQNames="true">
        <variable name="FUNC_NAME" expression="&quot;my_function&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAMS" expression="&quot;param : boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RETURN_TYPE" expression="&quot;integer&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="procedure" value="procedure $PROC_NAME$($PARAM1$; $PARAM2$) is&#10;begin&#10;    $END$&#10;end procedure $PROC_NAME$;" description="Inserts ''procedure'' implementation"
        toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my_procedure&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM1" expression="&quot;input : in boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM2" expression="&quot;output : out boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="for" value="for $PARAM$ in $RANGE$ loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RANGE" expression="&quot;0 to 7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="fori" value="for $PARAM$ in $LEFT$ to $RIGHT$ loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop from n TO m" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="LEFT" expression="&quot;0&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RIGHT" expression="&quot;7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="forr" value="for $PARAM$ in $OBJECT$'range loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop using RANGE attribute" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="OBJECT" expression="&quot;vector&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ifg" value="$GEN_NAME$_gen : if $COND$ generate&#10;begin&#10;    $END$&#10;end generate $GEN_NAME$_gen;" description="Inserts ''if-generate'' statement" toReformat="false"
        toShortenFQNames="true">
        <variable name="GEN_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="forg" value="$GEN_NAME$_gen : for $PARAM$ in $RANGE$ generate&#10;begin&#10;    $END$&#10;end generate $GEN_NAME$_gen;" description="Inserts ''for-generate'' statement"
        toReformat="false" toShortenFQNames="true">
        <variable name="GEN_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RANGE" expression="&quot;0 to 7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="assert" value="assert $COND$&#10;    report $ARCH_NAME$'instance_name &amp; &quot;$REPORT_MSG$&quot;&#10;    severity $SEVERITY$;" description="Inserts ''assert'' statement"
        toReformat="false" toShortenFQNames="true">
        <variable name="ARCH_NAME" expression="enum(&quot;rtl&quot;, &quot;sim&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="COND" expression="&quot;false&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="REPORT_MSG" expression="&quot;Assertion Failed&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="SEVERITY" expression="enum(&quot;failure&quot;, &quot;error&quot;, &quot;warning&quot;, &quot;note&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="report" value="report $ARCH_NAME$'instance_name &amp; &quot;$REPORT_MSG$&quot;&#10;    severity $SEVERITY$" description="Inserts ''report'' statement" toReformat="false"
        toShortenFQNames="true">
        <variable name="ARCH_NAME" expression="enum(&quot;rtl&quot;, &quot;sim&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="REPORT_MSG" expression="&quot;Assertion Failed&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="SEVERITY" expression="enum(&quot;failure&quot;, &quot;error&quot;, &quot;warning&quot;, &quot;note&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="entity" value="entity $NAME$ is&#10;    $END$&#10;end entity $NAME$;" description="Inserts ''entity'' clause" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_entity&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="port" value="port (&#10;    $END$&#10;);" description="Inserts ''port'' clause" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="in" value="$NAME$ : in $TYPE$; $COMMENT$ $END$" description="Inserts ''in port'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="enum(&quot;clock&quot;, &quot;reset&quot;, &quot;enable&quot;, &quot;data&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="out" value="$NAME$ : out $TYPE$; $COMMENT$ $END$" description="Inserts ''out port'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="enum(&quot;valid&quot;, &quot;data&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="inout" value="$NAME$ : inout $TYPE$; $COMMENT$ $END$" description="Inserts ''inout port'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="enum(&quot;spi_mosi&quot;, &quot;spi_miso&quot;, &quot;i2c_clock&quot;, &quot;i2c_data&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="&quot;std_logic&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="buffer" value="$NAME$ : buffer $TYPE$; $COMMENT$ $END$" description="Inserts ''buffer port'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="enum(&quot;valid_b&quot;, &quot;data_b&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="P" value="$NAME$ : $DIRECTION$ $TYPE$; $COMMENT$" description="Inserts ''port'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_port&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="DIRECTION" expression="enum(&quot;in&quot;, &quot;out&quot;, &quot;inout&quot;, &quot;buffer&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="generic" value="generic (&#10;    $END$&#10;);" description="Inserts ''generic'' clause" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="G" value="$NAME$_g : $TYPE$ := $DEFAULT_VAL$; $COMMENT$" description="Inserts ''generic'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_generic&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE"
            expression="enum(&quot;integer&quot;, &quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;time&quot;, &quot;unsigned&quot;, &quot;signed&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="DEFAULT_VAL" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="architecture" value="architecture $NAME$ of $ENTITY_NAME$ is&#10;begin&#10;    $END$&#10;end architecture $NAME$;" description="Inserts ''architecture'' clause" toReformat="false"
        toShortenFQNames="true">
        <variable name="NAME" expression="enum(&quot;rtl&quot;, &quot;sim&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="ENTITY_NAME" expression="&quot;my_entity&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="constant" value="constant $NAME$_c : $TYPE$ := $DEFAULT_VAL$; $COMMENT$" description="Inserts ''constant'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_const&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE"
            expression="enum(&quot;integer&quot;, &quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;time&quot;, &quot;unsigned&quot;, &quot;signed&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="DEFAULT_VAL" expression="" defaultValue="" alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="signal" value="signal $NAME$ : $TYPE$; $COMMENT$" description="Inserts ''signal'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_signal&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="variable" value="variable $NAME$_v : $TYPE$; $COMMENT$" description="Inserts ''variable'' declaration" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_var&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="TYPE" expression="enum(&quot;std_logic&quot;, &quot;std_logic_vector&quot;, &quot;boolean&quot;, &quot;unsigned&quot;, &quot;signed&quot;, &quot;integer&quot;)" defaultValue=""
            alwaysStopAt="true" />
        <variable name="COMMENT" expression="commentStart()" defaultValue="" alwaysStopAt="false" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="package" value="package $NAME$_pkg is&#10;    $END$&#10;end package $NAME$_pkg;" description="Inserts ''package'' clause" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="body" value="package body $NAME$_pkg is&#10;    $END$&#10;end package body $NAME$_pkg;" description="Inserts ''package body'' clause" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="block" value="$NAME$ : block is&#10;begin&#10;    $END$&#10;end block $NAME$;" description="Inserts ''block'' clause" toReformat="false" toShortenFQNames="true">
        <variable name="NAME" expression="&quot;my_block&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="module"
        value="library ieee;&#10;    use ieee.std_logic_1164.all;&#10;entity $ENTITY_NAME$ is&#10;    port (&#10;        clock : in std_logic$END$&#10;    );&#10;end entity $ENTITY_NAME$;&#10;&#10;architecture $ARCH_NAME$ of $ENTITY_NAME$ is&#10;begin&#10;    &#10;end architecture $ARCH_NAME$;"
        description="Inserts module (entity + architecture)" toReformat="true" toShortenFQNames="true">
        <variable name="ENTITY_NAME" expression="&quot;my_entity&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="ARCH_NAME" expression="enum(&quot;rtl&quot;, &quot;sim&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="library" value="library $LIB$;&#10;$END$" description="Inserts ''library'' declaration" toReformat="true" toShortenFQNames="true">
        <variable name="LIB" expression="enum(&quot;ieee&quot;, &quot;work&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="use" value="use $LIB$.$PKG$.$USE$;$END$&#10;" description="Inserts ''use'' statement" toReformat="true" toShortenFQNames="true">
        <variable name="LIB" expression="enum(&quot;ieee&quot;, &quot;work&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="PKG" expression="enum(&quot;std_logic_1164&quot;, &quot;numeric_std&quot;, &quot;std_logic_misc&quot;, &quot;version_pkg&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="USE" expression="&quot;all&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ieee" value="use ieee.$PKG$.$USE$;$END$&#10;" description="Inserts ''use'' statement for IEEE library" toReformat="true" toShortenFQNames="true">
        <variable name="PKG" expression="enum(&quot;std_logic_1164&quot;, &quot;numeric_std&quot;, &quot;std_logic_misc&quot;)" defaultValue="" alwaysStopAt="true" />
        <variable name="USE" expression="&quot;all&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="work" value="use work.$PKG$.$USE$;$END$&#10;" description="Inserts ''use'' use statement for work library" toReformat="true" toShortenFQNames="true">
        <variable name="PKG" expression="&quot;version_pkg&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="USE" expression="&quot;all&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
</templateSet>
